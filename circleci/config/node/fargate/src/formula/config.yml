version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.4
  aws-ecs: circleci/aws-ecs@0.0.10
jobs:
  test:
    docker:
      - image: circleci/node:current
      - image: postgres:12.4-alpine
        environment:
          POSTGRES_PASSWORD: admin
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
    environment:
      DB_NAME: ats-test
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install-npm-wee
          command: npm i
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: migrate
          command: npm run migrate:test
      - run:
          name: linter
          command: npm run linter
      - run:
          name: test
          command: npm run coverage
      - store_artifacts:
          path: coverage
          prefix: tests
      - store_test_results:
          path: coverage
  build-migrate-staging:
    docker:
      - image: circleci/node:11.5.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: update-npm
          command: "sudo npm install -g npm@6.9"
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install-npm-wee
          command: npm i
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: migrate
          command: npm run migrate:staging
      - run:
          name: Setup common environment variables
          command: |
            echo 'export FULL_IMAGE_NAME="950365701615.dkr.ecr.us-east-1.amazonaws.com/ats-gateway:${CIRCLE_SHA1}"' >> $BASH_ENV
      - run:
          name: Build image
          command: |
            docker build -t $FULL_IMAGE_NAME .
      - run:
          name: Save image to an archive
          command: |
            mkdir docker-image
            docker save -o docker-image/image.tar $FULL_IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - docker-image
  deploy-staging:
    docker:
      - image: circleci/python:3.6.1
    environment:
      AWS_DEFAULT_OUTPUT: json
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace
      - aws-cli/install
      - aws-cli/configure:
          aws-region: "us-east-1"
      - run:
          name: Load image
          command: |
            docker load --input workspace/docker-image/image.tar
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECS_CLUSTER_NAME="ats-cluster"' >> $BASH_ENV
            echo 'export ECS_SERVICE_NAME="ats-service-stg"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="950365701615.dkr.ecr.us-east-1.amazonaws.com/ats-gateway:${CIRCLE_SHA1}"' >> $BASH_ENV
      - run:
          name: Push image
          command: |
            eval $(aws ecr get-login --region us-east-1 --no-include-email)
            docker push $FULL_IMAGE_NAME
      - aws-ecs/update-service:
          family: "ats-stg-task"
          cluster-name: "${ECS_CLUSTER_NAME}"
          service-name: "ats-service-stg"
          container-image-name-updates: "container=ats-stg-container,image-and-tag=${FULL_IMAGE_NAME}"
          container-env-var-updates: "container=ats-stg-container,name=VERSION_INFO,value=${CIRCLE_SHA1}_${CIRCLE_BUILD_NUM},container=ats-stg-container,name=BUILD_DATE,value=\"$(date)\""
          verify-revision-is-deployed: true
  deploy-production:
    docker:
      - image: circleci/python:3.6.1
    environment:
      AWS_DEFAULT_OUTPUT: json
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace
      - aws-cli/install
      - aws-cli/configure:
          aws-region: "us-east-1"
      - run:
          name: Load image
          command: |
            docker load --input workspace/docker-image/image.tar
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECS_CLUSTER_NAME="ats-cluster"' >> $BASH_ENV
            echo 'export ECS_SERVICE_NAME="ats-service-stg"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="950365701615.dkr.ecr.us-east-1.amazonaws.com/ats-gateway-stg:${CIRCLE_SHA1}"' >> $BASH_ENV
      - aws-ecs/update-service:
          family: "ats-crawler-task"
          cluster-name: "${ECS_CLUSTER_NAME}"
          service-name: "ats-service-stg"
          container-image-name-updates: "container=ats-stg-container,image-and-tag=${FULL_IMAGE_NAME}"
          container-env-var-updates: "container=ats-stg-container,name=VERSION_INFO,value=${CIRCLE_SHA1}_${CIRCLE_BUILD_NUM},container=ats-stg-container,name=BUILD_DATE,value=\"$(date)\""
          verify-revision-is-deployed: true
workflows:
  build-deploy:
    jobs:
      - test
      - build-migrate-staging:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy-staging:
          requires:
            - build-migrate-staging
      - approve-production:
          type: approval
          requires:
            - deploy-staging